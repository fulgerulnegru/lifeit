# encoding: utf-8
import datetime
from south.db import db
from south.v2 import SchemaMigration
from django.db import models

class Migration(SchemaMigration):

    def forwards(self, orm):
        
        # Adding model 'Profile'
        db.create_table('controllers_profile', (
            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('cod', self.gf('django.db.models.fields.IntegerField')()),
            ('blocked', self.gf('django.db.models.fields.BooleanField')(default=False)),
            ('active', self.gf('django.db.models.fields.BooleanField')(default=False)),
            ('describe', self.gf('django.db.models.fields.TextField')(max_length=400)),
            ('image', self.gf('django.db.models.fields.files.ImageField')(max_length=100)),
            ('user', self.gf('django.db.models.fields.related.OneToOneField')(to=orm['auth.User'], unique=True)),
        ))
        db.send_create_signal('controllers', ['Profile'])

        # Adding model 'Newslatter'
        db.create_table('controllers_newslatter', (
            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('cod', self.gf('django.db.models.fields.IntegerField')()),
            ('active', self.gf('django.db.models.fields.BooleanField')(default=False)),
            ('email', self.gf('django.db.models.fields.EmailField')(max_length=75)),
        ))
        db.send_create_signal('controllers', ['Newslatter'])

        # Adding model 'File'
        db.create_table('controllers_file', (
            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('file', self.gf('django.db.models.fields.files.FileField')(max_length=100)),
            ('name', self.gf('django.db.models.fields.CharField')(max_length=50)),
            ('user', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
        ))
        db.send_create_signal('controllers', ['File'])

        # Adding model 'Links'
        db.create_table('controllers_links', (
            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('url', self.gf('django.db.models.fields.URLField')(unique=True, max_length=200)),
            ('value', self.gf('django.db.models.fields.CharField')(max_length=300)),
            ('rel', self.gf('django.db.models.fields.CharField')(max_length=50)),
        ))
        db.send_create_signal('controllers', ['Links'])

        # Adding model 'Page'
        db.create_table('controllers_page', (
            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('title', self.gf('django.db.models.fields.CharField')(max_length=200)),
            ('body', self.gf('django.db.models.fields.TextField')()),
        ))
        db.send_create_signal('controllers', ['Page'])

        # Adding model 'Tag'
        db.create_table('controllers_tag', (
            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('name', self.gf('django.db.models.fields.CharField')(unique=True, max_length=64)),
        ))
        db.send_create_signal('controllers', ['Tag'])

        # Adding model 'Article'
        db.create_table('controllers_article', (
            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('title', self.gf('django.db.models.fields.CharField')(max_length=200)),
            ('describe', self.gf('django.db.models.fields.CharField')(max_length=500)),
            ('body', self.gf('django.db.models.fields.TextField')()),
            ('data', self.gf('django.db.models.fields.DateField')()),
            ('aprobat', self.gf('django.db.models.fields.BooleanField')(default=False)),
            ('image', self.gf('django.db.models.fields.files.ImageField')(max_length=100)),
            ('user', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
        ))
        db.send_create_signal('controllers', ['Article'])

        # Adding M2M table for field tag on 'Article'
        db.create_table('controllers_article_tag', (
            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
            ('article', models.ForeignKey(orm['controllers.article'], null=False)),
            ('tag', models.ForeignKey(orm['controllers.tag'], null=False))
        ))
        db.create_unique('controllers_article_tag', ['article_id', 'tag_id'])

        # Adding model 'UnderMenu'
        db.create_table('controllers_undermenu', (
            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('undermenu', self.gf('django.db.models.fields.CharField')(max_length=50)),
            ('page', self.gf('django.db.models.fields.related.OneToOneField')(to=orm['controllers.Page'], unique=True, null=True)),
            ('url', self.gf('django.db.models.fields.CharField')(max_length=50)),
            ('order', self.gf('django.db.models.fields.IntegerField')(null=True)),
        ))
        db.send_create_signal('controllers', ['UnderMenu'])

        # Adding M2M table for field articles on 'UnderMenu'
        db.create_table('controllers_undermenu_articles', (
            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
            ('undermenu', models.ForeignKey(orm['controllers.undermenu'], null=False)),
            ('article', models.ForeignKey(orm['controllers.article'], null=False))
        ))
        db.create_unique('controllers_undermenu_articles', ['undermenu_id', 'article_id'])

        # Adding model 'Menu'
        db.create_table('controllers_menu', (
            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('menu', self.gf('django.db.models.fields.CharField')(max_length=50)),
            ('page', self.gf('django.db.models.fields.related.OneToOneField')(to=orm['controllers.Page'], unique=True, null=True)),
            ('url', self.gf('django.db.models.fields.CharField')(max_length=50)),
            ('order', self.gf('django.db.models.fields.IntegerField')(null=True)),
        ))
        db.send_create_signal('controllers', ['Menu'])

        # Adding M2M table for field undermenu on 'Menu'
        db.create_table('controllers_menu_undermenu', (
            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
            ('menu', models.ForeignKey(orm['controllers.menu'], null=False)),
            ('undermenu', models.ForeignKey(orm['controllers.undermenu'], null=False))
        ))
        db.create_unique('controllers_menu_undermenu', ['menu_id', 'undermenu_id'])

        # Adding M2M table for field articles on 'Menu'
        db.create_table('controllers_menu_articles', (
            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
            ('menu', models.ForeignKey(orm['controllers.menu'], null=False)),
            ('article', models.ForeignKey(orm['controllers.article'], null=False))
        ))
        db.create_unique('controllers_menu_articles', ['menu_id', 'article_id'])


    def backwards(self, orm):
        
        # Deleting model 'Profile'
        db.delete_table('controllers_profile')

        # Deleting model 'Newslatter'
        db.delete_table('controllers_newslatter')

        # Deleting model 'File'
        db.delete_table('controllers_file')

        # Deleting model 'Links'
        db.delete_table('controllers_links')

        # Deleting model 'Page'
        db.delete_table('controllers_page')

        # Deleting model 'Tag'
        db.delete_table('controllers_tag')

        # Deleting model 'Article'
        db.delete_table('controllers_article')

        # Removing M2M table for field tag on 'Article'
        db.delete_table('controllers_article_tag')

        # Deleting model 'UnderMenu'
        db.delete_table('controllers_undermenu')

        # Removing M2M table for field articles on 'UnderMenu'
        db.delete_table('controllers_undermenu_articles')

        # Deleting model 'Menu'
        db.delete_table('controllers_menu')

        # Removing M2M table for field undermenu on 'Menu'
        db.delete_table('controllers_menu_undermenu')

        # Removing M2M table for field articles on 'Menu'
        db.delete_table('controllers_menu_articles')


    models = {
        'auth.group': {
            'Meta': {'object_name': 'Group'},
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '80'}),
            'permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'})
        },
        'auth.permission': {
            'Meta': {'ordering': "('content_type__app_label', 'content_type__model', 'codename')", 'unique_together': "(('content_type', 'codename'),)", 'object_name': 'Permission'},
            'codename': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['contenttypes.ContentType']"}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '50'})
        },
        'auth.user': {
            'Meta': {'object_name': 'User'},
            'date_joined': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(2012, 10, 4, 6, 12, 16, 245442, tzinfo=<UTC>)'}),
            'email': ('django.db.models.fields.EmailField', [], {'max_length': '75', 'blank': 'True'}),
            'first_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Group']", 'symmetrical': 'False', 'blank': 'True'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'is_active': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
            'is_staff': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'is_superuser': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'last_login': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(2012, 10, 4, 6, 12, 16, 245311, tzinfo=<UTC>)'}),
            'last_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
            'password': ('django.db.models.fields.CharField', [], {'max_length': '128'}),
            'user_permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'}),
            'username': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '30'})
        },
        'contenttypes.contenttype': {
            'Meta': {'ordering': "('name',)", 'unique_together': "(('app_label', 'model'),)", 'object_name': 'ContentType', 'db_table': "'django_content_type'"},
            'app_label': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'model': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '100'})
        },
        'controllers.article': {
            'Meta': {'object_name': 'Article'},
            'aprobat': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'body': ('django.db.models.fields.TextField', [], {}),
            'data': ('django.db.models.fields.DateField', [], {}),
            'describe': ('django.db.models.fields.CharField', [], {'max_length': '500'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'image': ('django.db.models.fields.files.ImageField', [], {'max_length': '100'}),
            'tag': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['controllers.Tag']", 'null': 'True', 'symmetrical': 'False'}),
            'title': ('django.db.models.fields.CharField', [], {'max_length': '200'}),
            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['auth.User']"})
        },
        'controllers.file': {
            'Meta': {'object_name': 'File'},
            'file': ('django.db.models.fields.files.FileField', [], {'max_length': '100'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '50'}),
            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['auth.User']"})
        },
        'controllers.links': {
            'Meta': {'object_name': 'Links'},
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'rel': ('django.db.models.fields.CharField', [], {'max_length': '50'}),
            'url': ('django.db.models.fields.URLField', [], {'unique': 'True', 'max_length': '200'}),
            'value': ('django.db.models.fields.CharField', [], {'max_length': '300'})
        },
        'controllers.menu': {
            'Meta': {'object_name': 'Menu'},
            'articles': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['controllers.Article']", 'null': 'True', 'symmetrical': 'False'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'menu': ('django.db.models.fields.CharField', [], {'max_length': '50'}),
            'order': ('django.db.models.fields.IntegerField', [], {'null': 'True'}),
            'page': ('django.db.models.fields.related.OneToOneField', [], {'to': "orm['controllers.Page']", 'unique': 'True', 'null': 'True'}),
            'undermenu': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['controllers.UnderMenu']", 'symmetrical': 'False'}),
            'url': ('django.db.models.fields.CharField', [], {'max_length': '50'})
        },
        'controllers.newslatter': {
            'Meta': {'object_name': 'Newslatter'},
            'active': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'cod': ('django.db.models.fields.IntegerField', [], {}),
            'email': ('django.db.models.fields.EmailField', [], {'max_length': '75'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'})
        },
        'controllers.page': {
            'Meta': {'object_name': 'Page'},
            'body': ('django.db.models.fields.TextField', [], {}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'title': ('django.db.models.fields.CharField', [], {'max_length': '200'})
        },
        'controllers.profile': {
            'Meta': {'object_name': 'Profile'},
            'active': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'blocked': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'cod': ('django.db.models.fields.IntegerField', [], {}),
            'describe': ('django.db.models.fields.TextField', [], {'max_length': '400'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'image': ('django.db.models.fields.files.ImageField', [], {'max_length': '100'}),
            'user': ('django.db.models.fields.related.OneToOneField', [], {'to': "orm['auth.User']", 'unique': 'True'})
        },
        'controllers.tag': {
            'Meta': {'object_name': 'Tag'},
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '64'})
        },
        'controllers.undermenu': {
            'Meta': {'object_name': 'UnderMenu'},
            'articles': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['controllers.Article']", 'null': 'True', 'symmetrical': 'False'}),
            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'order': ('django.db.models.fields.IntegerField', [], {'null': 'True'}),
            'page': ('django.db.models.fields.related.OneToOneField', [], {'to': "orm['controllers.Page']", 'unique': 'True', 'null': 'True'}),
            'undermenu': ('django.db.models.fields.CharField', [], {'max_length': '50'}),
            'url': ('django.db.models.fields.CharField', [], {'max_length': '50'})
        }
    }

    complete_apps = ['controllers']
